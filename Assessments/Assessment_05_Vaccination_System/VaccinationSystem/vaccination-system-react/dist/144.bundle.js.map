{"version":3,"file":"144.bundle.js","mappings":"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","sources":["webpack://vaccination-system-react/./src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.css?1fc6","webpack://vaccination-system-react/./src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.js","webpack://vaccination-system-react/./src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.css","webpack://vaccination-system-react/./src/store/features/vaccinationOrder/vaccinationOrderSelectors.js"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./HospitalVaccinatedListPage.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./HospitalVaccinatedListPage.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchVaccinatedPersonsByHospital,\n    clearFetchVaccinatedPersonsStatus\n} from '../../../store/features/vaccinationOrder/vaccinationOrderSlice';\nimport {\n    selectVaccinatedPersons,\n    selectFetchVaccinatedPersonsStatus,\n    selectFetchVaccinatedPersonsError\n} from '../../../store/features/vaccinationOrder/vaccinationOrderSelectors';\nimport { selectCurrentUser } from '../../../store/features/auth/authSelectors';\n\nimport './HospitalVaccinatedListPage.css'; // Assuming you'll create this CSS file\n\nconst HospitalVaccinatedListPage = () => {\n    const dispatch = useDispatch();\n    const currentUser = useSelector(selectCurrentUser); // Get current user to access hospitalId\n\n    const vaccinatedPersons = useSelector(selectVaccinatedPersons);\n    const fetchStatus = useSelector(selectFetchVaccinatedPersonsStatus);\n    const fetchError = useSelector(selectFetchVaccinatedPersonsError);\n\n    // Get the hospitalId from the logged-in user\n    const hospitalId = currentUser?.hospital?._id;\n    const userRole = currentUser?.role;\n\n    useEffect(() => {\n        // Fetch vaccinated persons only if the user is hospital staff or admin and has a hospitalId\n        if (hospitalId && (userRole === 'hospital_staff' || userRole === 'admin')) {\n            dispatch(fetchVaccinatedPersonsByHospital(hospitalId));\n        }\n\n        // Cleanup function to clear status when component unmounts\n        return () => {\n            dispatch(clearFetchVaccinatedPersonsStatus());\n        };\n    }, [dispatch, hospitalId, userRole]); // Re-run effect if hospitalId or userRole changes\n\n    if (!hospitalId) {\n        return <div className=\"info-message\">Please log in as hospital staff or admin associated with a hospital to view this page.</div>;\n    }\n\n    if (fetchStatus === 'loading') {\n        return <div className=\"loading-message\">Loading vaccinated persons data...</div>;\n    }\n\n    if (fetchError) {\n        return <div className=\"error-message\">Error fetching vaccinated persons: {fetchError}</div>;\n    }\n\n    return (\n        <div className=\"vaccinated-list-container\">\n            <h2>Vaccinated Persons at {currentUser?.hospital?.name || 'Your Hospital'}</h2>\n\n            {vaccinatedPersons.length === 0 ? (\n                <p>No vaccination records found for this hospital yet.</p>\n            ) : (\n                <div className=\"table-responsive\">\n                    <table className=\"vaccinated-table\">\n                        <thead>\n                        <tr>\n                            <th>Patient Name</th>\n                            <th>Email</th>\n                            <th>Age</th>\n                            <th>Gender</th>\n                            <th>Contact</th>\n                            <th>Address</th>\n                            <th>Vaccine</th>\n                            <th>Dose</th>\n                            <th>Vaccination Date</th>\n                            <th>Administered By</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {vaccinatedPersons.map((record) => (\n                            <tr key={record._id}>\n                                <td>{record.userId?.name || 'N/A'}</td>\n                                <td>{record.userId?.email || 'N/A'}</td>\n                                <td>{record.userId?.age || 'N/A'}</td>\n                                <td>{record.userId?.gender || 'N/A'}</td>\n                                <td>{record.userId?.contact_number || 'N/A'}</td>\n                                <td>\n                                    {record.userId?.address ?\n                                        `${record.userId.address.street}, ${record.userId.address.city}, ${record.userId.address.state}, ${record.userId.address.zipCode}`\n                                        : 'N/A'}\n                                </td>\n                                <td>{record.vaccineId?.name || 'N/A'} ({record.vaccineId?.type || 'N/A'})</td>\n                                <td>{record.dose_number}</td>\n                                <td>{new Date(record.vaccination_date).toLocaleDateString()}</td>\n                                <td>{record.administeredBy?.name || 'Self-recorded / N/A'}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default HospitalVaccinatedListPage;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.css */\n\n.vaccinated-list-container {\n    padding: 20px;\n    max-width: 1200px;\n    margin: 20px auto;\n    background-color: #ffffff;\n    border-radius: 12px;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n    font-family: 'Inter', sans-serif;\n    color: #333;\n}\n\n.vaccinated-list-container h2 {\n    text-align: center;\n    color: #2c3e50;\n    margin-bottom: 30px;\n    font-size: 2.2em;\n    font-weight: 700;\n    position: relative;\n    padding-bottom: 10px;\n}\n\n.vaccinated-list-container h2::after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: 0;\n    transform: translateX(-50%);\n    width: 80px;\n    height: 4px;\n    background-color: #3498db;\n    border-radius: 2px;\n}\n\n.info-message,\n.loading-message,\n.error-message {\n    text-align: center;\n    padding: 20px;\n    margin-top: 30px;\n    border-radius: 8px;\n    font-size: 1.1em;\n    font-weight: 500;\n}\n\n.info-message {\n    background-color: #e7f3ff;\n    color: #3498db;\n    border: 1px solid #a8d9ff;\n}\n\n.loading-message {\n    background-color: #fffbe6;\n    color: #f39c12;\n    border: 1px solid #ffe0b2;\n}\n\n.error-message {\n    background-color: #ffe6e6;\n    color: #e74c3c;\n    border: 1px solid #ffb3b3;\n}\n\n.table-responsive {\n    overflow-x: auto; /* Ensures table is scrollable on small screens */\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.vaccinated-table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 0;\n    background-color: #fdfdfd;\n    border-radius: 8px;\n    overflow: hidden; /* Ensures rounded corners apply to table content */\n}\n\n.vaccinated-table thead {\n    background-color: #3498db;\n    color: #ffffff;\n}\n\n.vaccinated-table th {\n    padding: 15px 20px;\n    text-align: left;\n    font-weight: 600;\n    font-size: 0.95em;\n    border-bottom: 2px solid #2980b9;\n    white-space: nowrap; /* Prevent text wrapping in headers */\n}\n\n.vaccinated-table tbody tr {\n    border-bottom: 1px solid #ecf0f1;\n    transition: background-color 0.2s ease-in-out;\n}\n\n.vaccinated-table tbody tr:last-child {\n    border-bottom: none;\n}\n\n.vaccinated-table tbody tr:hover {\n    background-color: #f5fafd;\n}\n\n.vaccinated-table td {\n    padding: 12px 20px;\n    vertical-align: top;\n    font-size: 0.9em;\n    color: #555;\n}\n\n/* Specific styling for address column for better readability */\n.vaccinated-table td:nth-child(6) { /* Assuming Address is the 6th column */\n    max-width: 200px; /* Limit width to prevent excessive stretching */\n    word-wrap: break-word; /* Allow long addresses to wrap */\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n    .vaccinated-list-container {\n        padding: 15px;\n        margin: 15px auto;\n    }\n\n    .vaccinated-list-container h2 {\n        font-size: 1.8em;\n        margin-bottom: 20px;\n    }\n\n    .vaccinated-table th,\n    .vaccinated-table td {\n        padding: 10px 15px;\n        font-size: 0.85em;\n    }\n}\n\n@media (max-width: 480px) {\n    .vaccinated-list-container {\n        padding: 10px;\n        margin: 10px auto;\n    }\n\n    .vaccinated-list-container h2 {\n        font-size: 1.5em;\n    }\n\n    /* Stack table headers and data for very small screens if necessary,\n       though overflow-x: auto on .table-responsive is usually sufficient */\n    .vaccinated-table thead {\n        display: none; /* Hide headers on very small screens */\n    }\n\n    .vaccinated-table, .vaccinated-table tbody, .vaccinated-table tr, .vaccinated-table td {\n        display: block;\n        width: 100%;\n    }\n\n    .vaccinated-table tr {\n        margin-bottom: 15px;\n        border: 1px solid #ecf0f1;\n        border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.03);\n    }\n\n    .vaccinated-table td {\n        text-align: right;\n        padding-left: 50%; /* Space for pseudo-element label */\n        position: relative;\n        border: none;\n        border-bottom: 1px dotted #eee;\n    }\n\n    .vaccinated-table td::before {\n        content: attr(data-label); /* Use data-label attribute for column name */\n        position: absolute;\n        left: 15px;\n        width: calc(50% - 30px);\n        padding-right: 10px;\n        white-space: nowrap;\n        text-align: left;\n        font-weight: bold;\n        color: #34495e;\n    }\n\n    /* Add data-label attributes to your <td> elements in the React component for this to work */\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.css\"],\"names\":[],\"mappings\":\"AAAA,iFAAiF;;AAEjF;IACI,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;IACzB,mBAAmB;IACnB,0CAA0C;IAC1C,gCAAgC;IAChC,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,mBAAmB;IACnB,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,2BAA2B;IAC3B,WAAW;IACX,WAAW;IACX,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;;;IAGI,kBAAkB;IAClB,aAAa;IACb,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB,EAAE,iDAAiD;IACnE,kBAAkB;IAClB,0CAA0C;AAC9C;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,SAAS;IACT,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB,EAAE,mDAAmD;AACzE;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,gCAAgC;IAChC,mBAAmB,EAAE,qCAAqC;AAC9D;;AAEA;IACI,gCAAgC;IAChC,6CAA6C;AACjD;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;AACf;;AAEA,+DAA+D;AAC/D,oCAAoC,uCAAuC;IACvE,gBAAgB,EAAE,gDAAgD;IAClE,qBAAqB,EAAE,iCAAiC;AAC5D;;AAEA,2BAA2B;AAC3B;IACI;QACI,aAAa;QACb,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;QAChB,mBAAmB;IACvB;;IAEA;;QAEI,kBAAkB;QAClB,iBAAiB;IACrB;AACJ;;AAEA;IACI;QACI,aAAa;QACb,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;IACpB;;IAEA;2EACuE;IACvE;QACI,aAAa,EAAE,uCAAuC;IAC1D;;IAEA;QACI,cAAc;QACd,WAAW;IACf;;IAEA;QACI,mBAAmB;QACnB,yBAAyB;QACzB,kBAAkB;QAClB,sCAAsC;IAC1C;;IAEA;QACI,iBAAiB;QACjB,iBAAiB,EAAE,mCAAmC;QACtD,kBAAkB;QAClB,YAAY;QACZ,8BAA8B;IAClC;;IAEA;QACI,yBAAyB,EAAE,6CAA6C;QACxE,kBAAkB;QAClB,UAAU;QACV,uBAAuB;QACvB,mBAAmB;QACnB,mBAAmB;QACnB,gBAAgB;QAChB,iBAAiB;QACjB,cAAc;IAClB;;IAEA,4FAA4F;AAChG\",\"sourcesContent\":[\"/* src/pages/Hospital/HospitalVaccinatedListPage/HospitalVaccinatedListPage.css */\\n\\n.vaccinated-list-container {\\n    padding: 20px;\\n    max-width: 1200px;\\n    margin: 20px auto;\\n    background-color: #ffffff;\\n    border-radius: 12px;\\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\\n    font-family: 'Inter', sans-serif;\\n    color: #333;\\n}\\n\\n.vaccinated-list-container h2 {\\n    text-align: center;\\n    color: #2c3e50;\\n    margin-bottom: 30px;\\n    font-size: 2.2em;\\n    font-weight: 700;\\n    position: relative;\\n    padding-bottom: 10px;\\n}\\n\\n.vaccinated-list-container h2::after {\\n    content: '';\\n    position: absolute;\\n    left: 50%;\\n    bottom: 0;\\n    transform: translateX(-50%);\\n    width: 80px;\\n    height: 4px;\\n    background-color: #3498db;\\n    border-radius: 2px;\\n}\\n\\n.info-message,\\n.loading-message,\\n.error-message {\\n    text-align: center;\\n    padding: 20px;\\n    margin-top: 30px;\\n    border-radius: 8px;\\n    font-size: 1.1em;\\n    font-weight: 500;\\n}\\n\\n.info-message {\\n    background-color: #e7f3ff;\\n    color: #3498db;\\n    border: 1px solid #a8d9ff;\\n}\\n\\n.loading-message {\\n    background-color: #fffbe6;\\n    color: #f39c12;\\n    border: 1px solid #ffe0b2;\\n}\\n\\n.error-message {\\n    background-color: #ffe6e6;\\n    color: #e74c3c;\\n    border: 1px solid #ffb3b3;\\n}\\n\\n.table-responsive {\\n    overflow-x: auto; /* Ensures table is scrollable on small screens */\\n    border-radius: 8px;\\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\\n}\\n\\n.vaccinated-table {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin: 0;\\n    background-color: #fdfdfd;\\n    border-radius: 8px;\\n    overflow: hidden; /* Ensures rounded corners apply to table content */\\n}\\n\\n.vaccinated-table thead {\\n    background-color: #3498db;\\n    color: #ffffff;\\n}\\n\\n.vaccinated-table th {\\n    padding: 15px 20px;\\n    text-align: left;\\n    font-weight: 600;\\n    font-size: 0.95em;\\n    border-bottom: 2px solid #2980b9;\\n    white-space: nowrap; /* Prevent text wrapping in headers */\\n}\\n\\n.vaccinated-table tbody tr {\\n    border-bottom: 1px solid #ecf0f1;\\n    transition: background-color 0.2s ease-in-out;\\n}\\n\\n.vaccinated-table tbody tr:last-child {\\n    border-bottom: none;\\n}\\n\\n.vaccinated-table tbody tr:hover {\\n    background-color: #f5fafd;\\n}\\n\\n.vaccinated-table td {\\n    padding: 12px 20px;\\n    vertical-align: top;\\n    font-size: 0.9em;\\n    color: #555;\\n}\\n\\n/* Specific styling for address column for better readability */\\n.vaccinated-table td:nth-child(6) { /* Assuming Address is the 6th column */\\n    max-width: 200px; /* Limit width to prevent excessive stretching */\\n    word-wrap: break-word; /* Allow long addresses to wrap */\\n}\\n\\n/* Responsive adjustments */\\n@media (max-width: 768px) {\\n    .vaccinated-list-container {\\n        padding: 15px;\\n        margin: 15px auto;\\n    }\\n\\n    .vaccinated-list-container h2 {\\n        font-size: 1.8em;\\n        margin-bottom: 20px;\\n    }\\n\\n    .vaccinated-table th,\\n    .vaccinated-table td {\\n        padding: 10px 15px;\\n        font-size: 0.85em;\\n    }\\n}\\n\\n@media (max-width: 480px) {\\n    .vaccinated-list-container {\\n        padding: 10px;\\n        margin: 10px auto;\\n    }\\n\\n    .vaccinated-list-container h2 {\\n        font-size: 1.5em;\\n    }\\n\\n    /* Stack table headers and data for very small screens if necessary,\\n       though overflow-x: auto on .table-responsive is usually sufficient */\\n    .vaccinated-table thead {\\n        display: none; /* Hide headers on very small screens */\\n    }\\n\\n    .vaccinated-table, .vaccinated-table tbody, .vaccinated-table tr, .vaccinated-table td {\\n        display: block;\\n        width: 100%;\\n    }\\n\\n    .vaccinated-table tr {\\n        margin-bottom: 15px;\\n        border: 1px solid #ecf0f1;\\n        border-radius: 8px;\\n        box-shadow: 0 2px 5px rgba(0,0,0,0.03);\\n    }\\n\\n    .vaccinated-table td {\\n        text-align: right;\\n        padding-left: 50%; /* Space for pseudo-element label */\\n        position: relative;\\n        border: none;\\n        border-bottom: 1px dotted #eee;\\n    }\\n\\n    .vaccinated-table td::before {\\n        content: attr(data-label); /* Use data-label attribute for column name */\\n        position: absolute;\\n        left: 15px;\\n        width: calc(50% - 30px);\\n        padding-right: 10px;\\n        white-space: nowrap;\\n        text-align: left;\\n        font-weight: bold;\\n        color: #34495e;\\n    }\\n\\n    /* Add data-label attributes to your <td> elements in the React component for this to work */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// src/store/features/vaccinationOrder/vaccinationOrderSelectors.js\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst selectVaccinationOrderState = (state) => state.vaccinationOrder;\n\nexport const selectCreateOrderStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.createStatus\n);\n\nexport const selectCreateOrderError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.createError\n);\n\nexport const selectPatientOrders = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.patientOrders\n);\n\nexport const selectFetchPatientOrdersStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.fetchPatientOrdersStatus\n);\n\nexport const selectFetchPatientOrdersError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.fetchPatientOrdersError\n);\n\n// NEW Selectors for action statuses\nexport const selectMarkVaccinatedStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.markVaccinatedStatus\n);\n\nexport const selectMarkVaccinatedError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.markVaccinatedError\n);\n\nexport const selectMarkPaidStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.markPaidStatus\n);\n\nexport const selectMarkPaidError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.markPaidError\n);\n\nexport const selectScheduleAppointmentStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.scheduleAppointmentStatus\n);\n\nexport const selectScheduleAppointmentError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.scheduleAppointmentError\n);\n\nexport const selectCancelOrderStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.cancelOrderStatus\n);\n\nexport const selectCancelOrderError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.cancelOrderError\n);\n\n// NEW Selectors for vaccinated persons by hospital\nexport const selectVaccinatedPersons = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.vaccinatedPersons\n);\n\nexport const selectFetchVaccinatedPersonsStatus = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.fetchVaccinatedPersonsStatus\n);\n\nexport const selectFetchVaccinatedPersonsError = createSelector(\n    selectVaccinationOrderState,\n    (orderState) => orderState.fetchVaccinatedPersonsError\n);\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","_currentUser$hospital","_currentUser$hospital2","dispatch","useDispatch","currentUser","useSelector","selectCurrentUser","vaccinatedPersons","selectVaccinatedPersons","fetchStatus","selectFetchVaccinatedPersonsStatus","fetchError","selectFetchVaccinatedPersonsError","hospitalId","hospital","_id","userRole","role","useEffect","fetchVaccinatedPersonsByHospital","clearFetchVaccinatedPersonsStatus","React","className","name","length","map","record","_record$userId","_record$userId2","_record$userId3","_record$userId4","_record$userId5","_record$userId6","_record$vaccineId","_record$vaccineId2","_record$administeredB","key","userId","email","age","gender","contact_number","address","concat","street","city","state","zipCode","vaccineId","type","dose_number","Date","vaccination_date","toLocaleDateString","administeredBy","___CSS_LOADER_EXPORT___","push","module","id","selectVaccinationOrderState","vaccinationOrder","selectCreateOrderStatus","createSelector","orderState","createStatus","selectCreateOrderError","createError","selectPatientOrders","patientOrders","selectFetchPatientOrdersStatus","fetchPatientOrdersStatus","selectFetchPatientOrdersError","fetchPatientOrdersError","selectMarkVaccinatedStatus","markVaccinatedStatus","selectMarkVaccinatedError","markVaccinatedError","selectMarkPaidStatus","markPaidStatus","selectMarkPaidError","markPaidError","selectScheduleAppointmentStatus","scheduleAppointmentStatus","selectScheduleAppointmentError","scheduleAppointmentError","selectCancelOrderStatus","cancelOrderStatus","selectCancelOrderError","cancelOrderError","fetchVaccinatedPersonsStatus","fetchVaccinatedPersonsError"],"sourceRoot":""}